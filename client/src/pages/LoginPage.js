import React, { useState } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { useAuth } from '../context/AuthContext';
import { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline';

const LoginPage = () => {
    const [showPassword, setShowPassword] = useState(false);
    const { login } = useAuth();
    const navigate = useNavigate();
    const location = useLocation();

    // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    // –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ UX - –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ç—É–¥–∞, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª
    const from = location.state?.from?.pathname || '/';

    const {
        register,
        handleSubmit,
        formState: { errors, isSubmitting },
        setError,
    } = useForm();

    const onSubmit = async (data) => {
        const result = await login(data.email, data.password);

        if (result.success) {
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—É–¥–∞, –æ—Ç–∫—É–¥–∞ –æ–Ω –ø—Ä–∏—à–µ–ª, –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            navigate(from, { replace: true });
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Ñ–æ—Ä–º–µ
            setError('root', {
                type: 'manual',
                message: result.message,
            });
        }
    };

    return (
        <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
            <div className="max-w-md w-full space-y-8">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
                        <span className="text-2xl text-white">üèõÔ∏è</span>
                    </div>
                    <h2 className="text-3xl font-bold text-gray-900 mb-2">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
                    <p className="text-gray-600">
                        –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
                    </p>
                </div>

                {/* –§–æ—Ä–º–∞ */}
                <form className="mt-8 space-y-6" onSubmit={handleSubmit(onSubmit)}>
                    {/* –û–±—â–∞—è –æ—à–∏–±–∫–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ª–æ–≥–∏–Ω–µ/–ø–∞—Ä–æ–ª–µ */}
                    {errors.root && (
                        <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                            {errors.root.message}
                        </div>
                    )}

                    <div className="space-y-4">
                        {/* Email */}
                        <div>
                            <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-1">
                                Email –∞–¥—Ä–µ—Å
                            </label>
                            <input
                                {...register('email', {
                                    required: 'Email –∞–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω',
                                    pattern: {
                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                                        message: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞',
                                    },
                                })}
                                type="email"
                                autoComplete="email"
                                className={`input-field ${errors.email ? 'input-error' : ''}`}
                                placeholder="your@email.com"
                            />
                            {errors.email && <p className="mt-1 text-sm text-red-600">{errors.email.message}</p>}
                        </div>

                        {/* –ü–∞—Ä–æ–ª—å */}
                        <div>
                            <div className="flex items-center justify-between mb-1">
                                <label htmlFor="password" className="block text-sm font-medium text-gray-700">
                                    –ü–∞—Ä–æ–ª—å
                                </label>
                                {/* –ö–ª—é—á–µ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ: —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
                                    –†–∞–∑–º–µ—â–∞–µ–º –µ—ë —Ä—è–¥–æ–º —Å –ª–µ–π–±–ª–æ–º –ø–∞—Ä–æ–ª—è, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–∂–∏–¥–∞—é—Ç –µ—ë —É–≤–∏–¥–µ—Ç—å */}
                                <Link
                                    to="/forgot-password"
                                    className="text-sm text-blue-600 hover:text-blue-500 transition-colors"
                                >
                                    –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                                </Link>
                            </div>
                            <div className="relative">
                                <input
                                    {...register('password', {
                                        required: '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω',
                                        minLength: {
                                            value: 6,
                                            message: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤',
                                        },
                                    })}
                                    type={showPassword ? 'text' : 'password'}
                                    autoComplete="current-password"
                                    className={`input-field pr-10 ${errors.password ? 'input-error' : ''}`}
                                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                                />
                                {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –ø–∞—Ä–æ–ª—è - –≤–∞–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç UX
                                    –ú–Ω–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –≤–∏–¥–µ—Ç—å —á—Ç–æ –æ–Ω–∏ –ø–µ—á–∞—Ç–∞—é—Ç */}
                                <button
                                    type="button"
                                    onClick={() => setShowPassword(!showPassword)}
                                    className="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600"
                                >
                                    {showPassword ? (
                                        <EyeSlashIcon className="w-5 h-5" />
                                    ) : (
                                        <EyeIcon className="w-5 h-5" />
                                    )}
                                </button>
                            </div>
                            {errors.password && <p className="mt-1 text-sm text-red-600">{errors.password.message}</p>}
                        </div>
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ */}
                    <button
                        type="submit"
                        disabled={isSubmitting}
                        className="w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                        {isSubmitting ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
                    </button>

                    {/* –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é */}
                    <div className="text-center">
                        <p className="text-sm text-gray-600">
                            –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
                            <Link
                                to="/register"
                                className="font-medium text-blue-600 hover:text-blue-500 transition-colors"
                            >
                                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                            </Link>
                        </p>
                    </div>
                </form>

                {/* –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ - –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                    –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ —ç—Ç–æ—Ç –±–ª–æ–∫ —Å–ª–µ–¥—É–µ—Ç —É–±—Ä–∞—Ç—å –∏–∑ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
                <div className="mt-6 p-4 bg-gray-50 rounded-lg">
                    <p className="text-xs text-gray-600 mb-2 font-medium">–î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</p>
                    <div className="space-y-1 text-xs text-gray-500">
                        <p>
                            <strong>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</strong> admin@spb-attractions.ru
                        </p>
                        <p>
                            <strong>–ü–∞—Ä–æ–ª—å:</strong> admin123
                        </p>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default LoginPage;
