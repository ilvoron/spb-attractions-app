import React, { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import { MagnifyingGlassIcon, FunnelIcon } from '@heroicons/react/24/outline';
import categoryService from '../../services/categoryService';

const SearchAndFilters = ({ onSearch, onFilterChange, initialFilters = {} }) => {
    const [searchTerm, setSearchTerm] = useState(initialFilters.search || '');
    const [selectedCategory, setSelectedCategory] = useState(initialFilters.category || '');
    const [selectedAccessibility, setSelectedAccessibility] = useState(initialFilters.accessibility || '');
    const [selectedDistrict, setSelectedDistrict] = useState(initialFilters.district || '');
    const [sortBy, setSortBy] = useState(initialFilters.sort || 'name');
    const [filtersOpen, setFiltersOpen] = useState(false);

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
    const { data: categories = [] } = useQuery({
        queryKey: ['categories'],
        queryFn: categoryService.getCategories,
        staleTime: 1000 * 60 * 10, // –ö—ç—à–∏—Ä—É–µ–º –Ω–∞ 10 –º–∏–Ω—É—Ç
    });

    // –†–∞–π–æ–Ω—ã –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
    const districts = [
        '–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π',
        '–í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π',
        '–í—ã–±–æ—Ä–≥—Å–∫–∏–π',
        '–ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∏–π',
        '–ö–∏—Ä–æ–≤—Å–∫–∏–π',
        '–ö–æ–ª–ø–∏–Ω—Å–∫–∏–π',
        '–ö—Ä–∞—Å–Ω–æ–≥–≤–∞—Ä–¥–µ–π—Å–∫–∏–π',
        '–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π',
        '–ö—Ä–æ–Ω—à—Ç–∞–¥—Ç—Å–∫–∏–π',
        '–ö—É—Ä–æ—Ä—Ç–Ω—ã–π',
        '–ú–æ—Å–∫–æ–≤—Å–∫–∏–π',
        '–ù–µ–≤—Å–∫–∏–π',
        '–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π',
        '–ü–µ—Ç—Ä–æ–¥–≤–æ—Ä—Ü–æ–≤—ã–π',
        '–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π',
        '–ü—É—à–∫–∏–Ω—Å–∫–∏–π',
        '–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π',
        '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π',
    ];

    const handleSearchSubmit = (e) => {
        e.preventDefault();
        onSearch(searchTerm);
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    useEffect(() => {
        const filters = {
            category: selectedCategory,
            accessibility: selectedAccessibility,
            district: selectedDistrict,
            sort: sortBy,
        };
        onFilterChange(filters);
    }, [selectedCategory, selectedAccessibility, selectedDistrict, sortBy, onFilterChange]);

    return (
        <div className="bg-white rounded-xl shadow-md p-6 mb-8">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
            <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-semibold text-gray-900">–ü–æ–∏—Å–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π</h2>
                <button
                    onClick={() => setFiltersOpen(!filtersOpen)}
                    className="md:hidden btn-secondary flex items-center"
                >
                    <FunnelIcon className="w-4 h-4 mr-2" />
                    –§–∏–ª—å—Ç—Ä—ã
                </button>
            </div>

            {/* –ü–æ–∏—Å–∫ */}
            <form onSubmit={handleSearchSubmit} className="mb-6">
                <div className="relative">
                    <MagnifyingGlassIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
                    <input
                        type="text"
                        placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é..."
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        className="input-field pl-10 pr-20"
                    />
                    <button
                        type="submit"
                        className="absolute right-2 top-1/2 transform -translate-y-1/2 btn-primary text-sm py-1.5"
                    >
                        –ù–∞–π—Ç–∏
                    </button>
                </div>
            </form>

            {/* –§–∏–ª—å—Ç—Ä—ã */}
            <div
                className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 ${
                    filtersOpen ? 'block' : 'hidden md:grid'
                }`}
            >
                {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
                <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                    <select
                        value={selectedCategory}
                        onChange={(e) => setSelectedCategory(e.target.value)}
                        className="input-field"
                    >
                        <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                        {categories.map((category) => (
                            <option key={category.id} value={category.id}>
                                {category.name} ({category.attractionsCount})
                            </option>
                        ))}
                    </select>
                </div>

                {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–π–æ–Ω—É */}
                <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">–†–∞–π–æ–Ω</label>
                    <select
                        value={selectedDistrict}
                        onChange={(e) => setSelectedDistrict(e.target.value)}
                        className="input-field"
                    >
                        <option value="">–í—Å–µ —Ä–∞–π–æ–Ω—ã</option>
                        {districts.map((district) => (
                            <option key={district} value={district}>
                                {district}
                            </option>
                        ))}
                    </select>
                </div>

                {/* –§–∏–ª—å—Ç—Ä –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
                <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</label>
                    <select
                        value={selectedAccessibility}
                        onChange={(e) => setSelectedAccessibility(e.target.value)}
                        className="input-field"
                    >
                        <option value="">–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞</option>
                        <option value="wheelchair">–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∫–æ–ª—è—Å–æ–∫</option>
                        <option value="audio">–° –∞—É–¥–∏–æ–≥–∏–¥–æ–º</option>
                        <option value="elevator">–° –ª–∏—Ñ—Ç–æ–º</option>
                    </select>
                </div>

                {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
                <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</label>
                    <select value={sortBy} onChange={(e) => setSortBy(e.target.value)} className="input-field">
                        <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                        <option value="newest">–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ</option>
                        <option value="oldest">–°–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ</option>
                        <option value="category">–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    </select>
                </div>
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
            <div className="mt-6 pt-6 border-t border-gray-200">
                <p className="text-sm font-medium text-gray-700 mb-3">–ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</p>
                <div className="flex flex-wrap gap-2">
                    <button
                        onClick={() => {
                            setSelectedCategory('');
                            setSelectedAccessibility('');
                            setSelectedDistrict('');
                            setSortBy('name');
                            setSearchTerm('');
                        }}
                        className="px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full transition-colors"
                    >
                        –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ
                    </button>
                    <button
                        onClick={() => setSelectedAccessibility('wheelchair')}
                        className={`px-3 py-1 text-sm rounded-full transition-colors ${
                            selectedAccessibility === 'wheelchair'
                                ? 'bg-green-100 text-green-800'
                                : 'bg-gray-100 hover:bg-gray-200 text-gray-700'
                        }`}
                    >
                        ‚ôø –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Å—Ç–∞
                    </button>
                    <button
                        onClick={() => setSortBy('newest')}
                        className={`px-3 py-1 text-sm rounded-full transition-colors ${
                            sortBy === 'newest'
                                ? 'bg-blue-100 text-blue-800'
                                : 'bg-gray-100 hover:bg-gray-200 text-gray-700'
                        }`}
                    >
                        üÜï –ù–æ–≤—ã–µ –º–µ—Å—Ç–∞
                    </button>
                </div>
            </div>
        </div>
    );
};

export default SearchAndFilters;
